<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mixc.cpms.schedule.mq.service.dao.ITimeBucketMapper">

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="delayedMsg.id">
        insert into `${tableName}`(`schedule_service_code`, `topic`, `tags`, `deadline`, `msg_content`)
        values(#{delayedMsg.scheduleServiceCode}, #{delayedMsg.topic}, #{delayedMsg.tags}, #{delayedMsg.deadline}, #{delayedMsg.msgContent})
    </insert>

    <select id="showAllTables" resultType="string">
        show tables
    </select>

    <select id="getMsgContent" resultType="com.mixc.cpms.schedule.mq.service.model.DelayedMsg">
        select `id`, msg_content, `topic`, `tags`
        from `${tableName}`
        where `id` in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="countSegmentMsg" resultType="integer">
        select count(*) from `${tableName}` where `schedule_service_code` = #{scheduleServiceCode}
        <if test="null != limitDTO and null != limitDTO.fromId">
            and `id` > #{limitDTO.fromId}
        </if>
    </select>

    <select id="getMsgIndexByPage" resultType="com.mixc.cpms.schedule.mq.service.model.DelayedMsg">
        select `id`, `deadline`
        from `${tableName}`
        where `schedule_service_code` = #{scheduleServiceCode}
        <if test="null != limitDTO">
            limit #{limitDTO.start}, #{limitDTO.size}
        </if>
    </select>

    <select id="getMsgIndexInRange" resultType="com.mixc.cpms.schedule.mq.service.model.DelayedMsg">
        select
               `id`, `deadline`
        from `${tableName}`
        where `schedule_service_code` = #{scheduleServiceCode}
        and `id` &gt; #{limitDTO.fromId} and `id` &lt;= #{limitDTO.toId}
    </select>

    <select id="getMsgIndexFrom" resultType="com.mixc.cpms.schedule.mq.service.model.DelayedMsg">
        select
            `id`, `deadline`
        from `${tableName}`
        where `schedule_service_code` = #{scheduleServiceCode} and `id` &gt; #{limitDTO.fromId}
        limit #{limitDTO.size}
    </select>

    <select id="maxIdFromSegment" resultType="long">
        select max(`id`) from `${tableName}` where `schedule_service_code` = #{scheduleServiceCode}
    </select>
    
    <update id="createNewSegment" parameterType="string">
        create table `${tableName}`(
           `id` int unsigned NOT NULL AUTO_INCREMENT,
           `schedule_service_code` varchar(36) NOT NULL,
           `deadline` datetime NOT NULL,
           `topic` varchar(50) not null,
           `tags` varchar(50) not null default '',
           `msg_content` text NOT NULL,
           `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
           PRIMARY KEY (`id`),
           KEY `IDX_SERVICE_CODE` (`schedule_service_code`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
    </update>


</mapper>
